<?xml version="1.0" encoding="UTF-8"?>
<project name="AwsTool" default="compile" basedir=".">
	<description>Build AwsTool.jar</description>

	<property name="lib.dir" value="/pcc/lsfqa-trusted/blue/3rdparty" />
	<property name="jarfilename" value="${ant.project.name}.jar" />
	<property name="src" value="src/main/java" />
	<property name="bin" value="bin" />
	<property name="classes" value="bin/classes" />
	<property name="lib" value="lib" />


	<target name="init">
		<mkdir dir="${classes}" />
		<mkdir dir="${lib}" />
	</target>

	<target name="copy_third_party_jars" depends="init" description="copy all third party jar files to lib directory">
		<copy todir="${lib}" flatten="true">
			<resources>
				<file file="${lib.dir}/aws-java-sdk-ec2/1.11.699/aws-java-sdk-ec2-1.11.699.jar" />
				<file file="${lib.dir}/aws-java-sdk-core/1.11.699/aws-java-sdk-core-1.11.699.jar" />
				<file file="${lib.dir}/jmespath-java/1.11.699/jmespath-java-1.11.699.jar" />
				<file file="${lib.dir}/commons-codec/1.14/commons-codec-1.14.jar" />
				<file file="${lib.dir}/commons-logging/1.2/commons-logging-1.2.jar" />
				<file file="${lib.dir}/commons-lang/2.6/commons-lang-2.6.jar" />
				<file file="${lib.dir}/ezmorph/1.0.6/ezmorph-1.0.6.jar" />
				<file file="${lib.dir}/commons-beanutils/1.9.4/commons-beanutils-1.9.4.jar" />
				<file file="${lib.dir}/commons-collections/3.2.2/commons-collections-3.2.2.jar" />
				<file file="${lib.dir}/httpclient/4.5.13/httpclient-4.5.13.jar" />
				<file file="${lib.dir}/httpcore/4.4.13/httpcore-4.4.13.jar" />
				<file file="${lib.dir}/jackson-annotations/2.12.4/jackson-annotations-2.12.4.jar" />
				<file file="${lib.dir}/jackson-core/2.12.4/jackson-core-2.12.4.jar" />
				<file file="${lib.dir}/jackson-databind/2.12.4/jackson-databind-2.12.4.jar" />
				<file file="${lib.dir}/jackson-dataformat-cbor/2.12.4/jackson-dataformat-cbor-2.12.4.jar" />
				<file file="${lib.dir}/json-lib/2.2.3/json-lib-2.2.3-jdk15.jar" />
				<file file="${lib.dir}/joda-time/2.9.9/joda-time-2.9.9.jar" />
				<file file="${lib.dir}/ion-java/1.0.2/ion-java-1.0.2.jar" />
				<file file="${lib.dir}/log4j-api/2.14.1/log4j-api-2.14.1.jar" />
				<file file="${lib.dir}/log4j-core/2.14.1/log4j-core-2.14.1.jar" />
			</resources>
		</copy>
	</target>

	<path id="lib.classpath" description="all jar files in lib direcory">
		<fileset dir="${lib}">
			<include name="*.jar" />
		</fileset>
	</path>

	<target name="compile" depends="copy_third_party_jars" description="compile target">
		<javac srcdir="${src}" destdir="${classes}" includeantruntime="true" debug="true" debuglevel="lines,source">
			<classpath refid="lib.classpath" />
		</javac>
	</target>

	<target name="jar" depends="compile" description="make jar file">
		<!-- convert classpath to a flat list/string for use in manifest task -->
		<pathconvert property="mf.classpath" pathsep=" ">
			<path refid="lib.classpath" />
			<flattenmapper />
		</pathconvert>

		<jar jarfile="lib/${jarfilename}" basedir="${classes}">
			<manifest>
				<attribute name="Main-Class" value="com.ibm.spectrum.AwsMain" />
				<attribute name="Class-Path" value="${mf.classpath}" />
			</manifest>

			<fileset dir="${src}" includes="*.xml" />

		</jar>
	</target>

	<target name="run" depends="jar">
		<java jar="${jarfilename}" fork="true">
		</java>
	</target>

	<target name="clean">
		<delete dir="${bin}" />
		<delete dir="${lib}" includes="${ant.project.name}*.jar" />
		<delete dir="${lib}" />
	</target>
</project>
